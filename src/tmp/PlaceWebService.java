
package tmp;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PlaceWebService", targetNamespace = "http://tmp/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PlaceWebService {


    /**
     * 
     * @param address
     * @param city
     * @param name
     * @param description
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPLace", targetNamespace = "http://tmp/", className = "tmp.CreatePLace")
    @ResponseWrapper(localName = "createPLaceResponse", targetNamespace = "http://tmp/", className = "tmp.CreatePLaceResponse")
    @Action(input = "http://tmp/PlaceWebService/createPLaceRequest", output = "http://tmp/PlaceWebService/createPLaceResponse")
    public int createPLace(
            @WebParam(name = "name", targetNamespace = "")
                    String name,
            @WebParam(name = "description", targetNamespace = "")
                    String description,
            @WebParam(name = "city", targetNamespace = "")
                    String city,
            @WebParam(name = "address", targetNamespace = "")
                    String address);

    /**
     * 
     * @param address
     * @param city
     * @param name
     * @param description
     * @return
     *     returns java.util.List<tmp.Place>
     * @throws IllegalNameException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPlaces", targetNamespace = "http://tmp/", className = "tmp.GetPlaces")
    @ResponseWrapper(localName = "getPlacesResponse", targetNamespace = "http://tmp/", className = "tmp.GetPlacesResponse")
    @Action(input = "http://tmp/PlaceWebService/getPlacesRequest", output = "http://tmp/PlaceWebService/getPlacesResponse", fault = {
        @FaultAction(className = IllegalNameException.class, value = "http://tmp/PlaceWebService/getPlaces/Fault/IllegalNameException")
    })
    public List<Place> getPlaces(
            @WebParam(name = "name", targetNamespace = "")
                    String name,
            @WebParam(name = "description", targetNamespace = "")
                    String description,
            @WebParam(name = "city", targetNamespace = "")
                    String city,
            @WebParam(name = "address", targetNamespace = "")
                    String address)
        throws IllegalNameException
    ;

    /**
     * 
     * @param address
     * @param city
     * @param name
     * @param description
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changePlace", targetNamespace = "http://tmp/", className = "tmp.ChangePlace")
    @ResponseWrapper(localName = "changePlaceResponse", targetNamespace = "http://tmp/", className = "tmp.ChangePlaceResponse")
    @Action(input = "http://tmp/PlaceWebService/changePlaceRequest", output = "http://tmp/PlaceWebService/changePlaceResponse")
    public int changePlace(
            @WebParam(name = "id", targetNamespace = "")
                    int id,
            @WebParam(name = "name", targetNamespace = "")
                    String name,
            @WebParam(name = "description", targetNamespace = "")
                    String description,
            @WebParam(name = "city", targetNamespace = "")
                    String city,
            @WebParam(name = "address", targetNamespace = "")
                    String address);

    /**
     * 
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePlace", targetNamespace = "http://tmp/", className = "tmp.DeletePlace")
    @ResponseWrapper(localName = "deletePlaceResponse", targetNamespace = "http://tmp/", className = "tmp.DeletePlaceResponse")
    @Action(input = "http://tmp/PlaceWebService/deletePlaceRequest", output = "http://tmp/PlaceWebService/deletePlaceResponse")
    public int deletePlace(
            @WebParam(name = "id", targetNamespace = "")
                    int id);

}
